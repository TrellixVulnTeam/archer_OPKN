---
- name: determine role facts
  set_fact:
    sudoforge_sshd:
      service:
        enabled: "{{ sudoforge_sshd.service.enabled if sudoforge_sshd is defined and sudoforge_sshd.service is defined else 'false' }}"
      config:
        port: "{{ sudoforge_sshd.config.port if sudoforge_sshd is defined and sudoforge_sshd.config is defined and sudoforge_sshd.config.port is defined else '22' }}"
        allowusers: "{{ sudoforge_sshd.config.allowusers if sudoforge_sshd is defined and sudoforge_sshd.config is defined and sudoforge_sshd.config.allowusers is defined else '' }}"
  tags:
    - sudoforge.sshd

- debug:
    var: sudoforge_sshd
  tags:
    - sudoforge.sshd

- name: install openssh
  package:
    name: openssh
    state: present
  tags:
    - sudoforge.sshd

- name: apply template for /etc/ssh/sshd_config
  template:
    src: sshd_config.j2
    dest: /etc/ssh/sshd_config
  tags:
    - sudoforge.sshd

- name: create openssh systemd unit file directory
  file:
    path: /etc/systemd/system/sshd.socket.d
    state: directory
  tags:
    - sudoforge.sshd

- name: apply template for /etc/systemd/system/sshd.socket.d/override.conf
  template:
    src: sshd-socket-override.conf.j2
    dest: /etc/systemd/system/sshd.socket.d/override.conf
  notify:
    - reload systemd config
    - restart sshd
  tags:
    - sudoforge.sshd

- name: manage sshd.socket service
  service:
    name: sshd.socket
    enabled: "{{ 'yes' if sudoforge_sshd.service.enabled == true else 'no' }}"
    state: "{{ 'started' if sudoforge_sshd.service.enabled == true else 'stopped' }}"
  tags:
    - sudoforge.sshd
